@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  /* --animation-speed: 1000ms; */
  --animation-speed-fast: 250ms;
  --default-cell-bg-color: theme("colors.white");
  --default-cell-border-color: theme("colors.black");
  --default-cell-text-color: theme("colors.black");
  --absent-cell-bg-color: theme("colors.slate.400");
  --correct-cell-bg-color: theme("colors.green.400");
  --present-cell-bg-color: theme("colors.yellow.400");
}

.dark {
  --default-cell-bg-color: theme("colors.slate.900");
  --default-cell-border-color: theme("colors.white");
  --default-cell-text-color: theme("colors.white");
  --absent-cell-bg-color: theme("colors.slate.700");
}

.high-contrast {
  --correct-cell-bg-color: theme("colors.orange.400");
  --present-cell-bg-color: theme("colors.cyan.400");
}

.cell-fill-animation {
  animation: onTypeCell linear;
  animation-duration: 0.35s;
}

.cell-reveal {
  animation-name: revealCharCell;
  /* animation-duration: 0.9s; */
  animation-timing-function: linear;
  animation-fill-mode: backwards;
  /* animation: cubic-bezier(1, 0, 0, 1) 0.7s linear; */
}

svg.cursor-pointer {
  transition: all var(--animation-speed-fast);
}

svg.cursor-pointer:hover {
  transform: scale(1.2);
}

.jiggle {
  animation: jiggle linear;
  animation-duration: var(--animation-speed-fast);
}

.navbar {
  margin-bottom: 5%;
}

.navbar-content {
  display: flex;
  height: 3rem;
  align-items: center;
  justify-content: space-between;
}

.right-icons {
  display: flex;
}

@keyframes revealCharCell {
  0% {
    transform: rotateX(0deg);
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50% {
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50.1% {
    background-color: var(--correct-cell-bg-color);
    border-color: var(--correct-cell-bg-color);
  }
  100% {
    transform: rotateX(180deg);
  }
}

/* Additional animation on the child div to avoid letters turning upside down/snapping back to upright visual glitch */
@keyframes offsetLetterFlip {
  0% {
    transform: rotateX(0deg);
  }
  100% {
    transform: rotateX(180deg);
  }
}

@keyframes onTypeCell {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.1);
  }

  100% {
    transform: scale(1);
  }
}

.shadowed {
  text-shadow: 1px 1px 1px #000000;
}

@keyframes jiggle {
  0% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(-0.5rem, 0);
  }
  50% {
    transform: translate(0.5rem, 0);
  }
  75% {
    transform: translate(-0.5rem, 0);
  }
  100% {
    transform: translate(0, 0);
  }
}
img {
  padding-top: 3%;
  padding-left: 1.5rem;
  max-width: 50%;
  height: auto;
}
